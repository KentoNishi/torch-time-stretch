{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Torch Time Stretch Docs Welcome to the torch-time-stretch documentation! View on PyPI / View on GitHub What is torch-time-stretch ? Time-stretch audio clips quickly with PyTorch (CUDA supported)! Additional utilities for searching efficient transformations are included. This package includes two main features: Time-stretch audio clips quickly using PyTorch (with CUDA support) Calculate efficient time-stretch targets (useful for augmentation, where speed is more important than precise time-stretches)","title":"About"},{"location":"#torch-time-stretch-docs","text":"Welcome to the torch-time-stretch documentation! View on PyPI / View on GitHub","title":"Torch Time Stretch Docs"},{"location":"#what-is-torch-time-stretch","text":"Time-stretch audio clips quickly with PyTorch (CUDA supported)! Additional utilities for searching efficient transformations are included. This package includes two main features: Time-stretch audio clips quickly using PyTorch (with CUDA support) Calculate efficient time-stretch targets (useful for augmentation, where speed is more important than precise time-stretches)","title":"What is torch-time-stretch?"},{"location":"usage/","text":"Usage Installation You can install torch-time-stretch from PyPI . pip install torch-time-stretch To upgrade an existing installation of torch-time-stretch , use the following command: pip install --upgrade --no-cache-dir torch-time-stretch Importing First, import torch-time-stretch . # import all functions from torch_time_stretch import * # ... or import them manually from torch_time_stretch import get_fast_stretches, time_stretch What's included torch-time-stretch includes the following: Type Name Description Function time_stretch Stretch a batch of waveforms by a given amount without altering the pitch. Function get_fast_stretches Utility function for calculating time-stretches that can be executed quickly. Methods time_stretch Stretch a batch of waveforms by a given amount without altering the pitch. Arguments Argument Required Default Value Type Description input Yes torch.Tensor [ shape=( batch_size, channels, samples ) ] Input audio clips of shape (batch_size, channels, samples) stretch Yes float or Fraction Indicates the stretch ratio (usually an element in get_fast_stretches() ). sample_rate Yes int The sample rate of the input audio clips. n_fft No sample_rate // 64 int Size of FFT. Default sample_rate // 64 . Smaller is faster. bins_per_octave No 12 int Number of bins per octave. Default is 12. Return value Type Description torch.Tensor [ shape=( batch_size, channels, samples ) ] The time-stretched batch of audio clips get_fast_stretches Search for time-stretch targets that can be computed quickly for a given sample rate. Argument Required Default Value Type Description sample_rate Yes int The sample rate of an audio clip. condition No lambda x: ( x >= 0.5 and x <= 2 and x != 1 ) Callable A function to validate fast stretch ratios. Default value limits computed targets to values between -1 and +1 octaves. Return value Type Description List[Fraction] A list of fast time-stretch target ratios that satisfy the given conditions. Example See example.py to see an example of torch-time-stretch in action!","title":"Usage"},{"location":"usage/#usage","text":"","title":"Usage"},{"location":"usage/#installation","text":"You can install torch-time-stretch from PyPI . pip install torch-time-stretch To upgrade an existing installation of torch-time-stretch , use the following command: pip install --upgrade --no-cache-dir torch-time-stretch","title":"Installation"},{"location":"usage/#importing","text":"First, import torch-time-stretch . # import all functions from torch_time_stretch import * # ... or import them manually from torch_time_stretch import get_fast_stretches, time_stretch","title":"Importing"},{"location":"usage/#whats-included","text":"torch-time-stretch includes the following: Type Name Description Function time_stretch Stretch a batch of waveforms by a given amount without altering the pitch. Function get_fast_stretches Utility function for calculating time-stretches that can be executed quickly.","title":"What's included"},{"location":"usage/#methods","text":"","title":"Methods"},{"location":"usage/#time_stretch","text":"Stretch a batch of waveforms by a given amount without altering the pitch.","title":"time_stretch"},{"location":"usage/#arguments","text":"Argument Required Default Value Type Description input Yes torch.Tensor [ shape=( batch_size, channels, samples ) ] Input audio clips of shape (batch_size, channels, samples) stretch Yes float or Fraction Indicates the stretch ratio (usually an element in get_fast_stretches() ). sample_rate Yes int The sample rate of the input audio clips. n_fft No sample_rate // 64 int Size of FFT. Default sample_rate // 64 . Smaller is faster. bins_per_octave No 12 int Number of bins per octave. Default is 12.","title":"Arguments"},{"location":"usage/#return-value","text":"Type Description torch.Tensor [ shape=( batch_size, channels, samples ) ] The time-stretched batch of audio clips","title":"Return value"},{"location":"usage/#get_fast_stretches","text":"Search for time-stretch targets that can be computed quickly for a given sample rate. Argument Required Default Value Type Description sample_rate Yes int The sample rate of an audio clip. condition No lambda x: ( x >= 0.5 and x <= 2 and x != 1 ) Callable A function to validate fast stretch ratios. Default value limits computed targets to values between -1 and +1 octaves.","title":"get_fast_stretches"},{"location":"usage/#return-value_1","text":"Type Description List[Fraction] A list of fast time-stretch target ratios that satisfy the given conditions.","title":"Return value"},{"location":"usage/#example","text":"See example.py to see an example of torch-time-stretch in action!","title":"Example"}]}